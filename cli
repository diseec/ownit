#!/bin/bash

cd $(dirname "$0") && command=$1 && shift

source "./bin/helpers.sh"

if [ -z "$command" ]; then
    clear && bash $0 help && exit 0
fi

case $command in
    
    install)
        execute bin/install "$@"
    ;;

    build)
        execute bin/build "$@"
    ;;

    test)
        execute bin/test "$@"
    ;;

    pro)
        execute bin/production "$@"
    ;;

    dev)
        docker-compose up -d "$@"
        # attach terminal to expo-cli
        docker attach $(docker ps -qf "name=uix")
    ;;

    pre)
        service pre "$@"
    ;;

    api)
        service api "$@"
    ;;

    uix)
        service uix "$@"
    ;;

    help|--help|-h)
        message "Welcome to OwnIt CLI"
        printf "\n"
        color_output 33 "Usage:"
        color_output 0 "    command [options] [arguments]"
        printf "\n"
        color_output 33 "Options:"
        color_output 0 "    \e[32m-h, --help\e[0m       Display help for the given command"
        printf "\n"
        color_output 33 "Commands:"
        color_output 0 "    \e[32minstall\e[0m          Install and setup the application after it was cloned"
        color_output 0 "    \e[32mdev\e[0m              Start the server in dev mode"
        color_output 0 "    \e[31mdeploy\e[0m           Deploy the application"
        color_output 0 "    \e[31mstart\e[0m            Start servers or services in production mode (e.g. mysql, redis, etc.)"
        color_output 0 "    \e[32mtest\e[0m             Run tests"
        color_output 0 "    \e[31mbuild\e[0m            Build the application"
        printf "\n"
        color_output 33 "Services:"
        color_output 0 "    \e[32mdocker\e[0m           Docker specific commands (e.g. \e[32mbuild\e[0m images, access \e[32mcompose\e[0m commands, etc.)"
        color_output 0 "    \e[32mapi\e[0m              The CLI for the api service"
        color_output 0 "    \e[32muix\e[0m              The CLI for the ui service"
        color_output 0 "    \e[32mpro\e[0m              Production server CLI (e.g. connecting, deploying, etc.)"
        printf "\n"
        message note "Do not use this cli inside the containers, as it does not support it yet."
        exit 0
    ;;

    *)
        message error "Unknown command: $command"
    ;;
esac